// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.test.aptosblogdemo.domain;

import org.test.aptosblogdemo.specialization.ReflectUtils;
import org.test.aptosblogdemo.specialization.MutationContext;
import org.test.aptosblogdemo.specialization.VerificationContext;
import org.test.aptosblogdemo.domain.article.*;
import java.math.BigInteger;
import java.util.Date;
import org.test.aptosblogdemo.domain.*;
import org.test.aptosblogdemo.domain.tag.*;
import org.test.aptosblogdemo.domain.blog.*;

public class StaticMethodConstraints {

    public static void assertStaticVerificationAndMutationMethods() {

        ReflectUtils.assertStaticMethodIfClassExists(
                    "org.test.aptosblogdemo.domain.article.AddTagLogic",
                    "verify",
                    new Class[]{java.util.function.Supplier.class, ArticleState.class, String.class, VerificationContext.class},
                    new String[]{"_", "_", "tag"}
            );


        ReflectUtils.assertStaticMethodIfClassExists(
                    "org.test.aptosblogdemo.domain.article.CreateLogic",
                    "verify",
                    new Class[]{java.util.function.Supplier.class, ArticleState.class, String.class, String.class, String.class, VerificationContext.class},
                    new String[]{"_", "_", "title", "body", "owner"}
            );


        ReflectUtils.assertStaticMethodIfClassExists(
                    "org.test.aptosblogdemo.domain.article.UpdateLogic",
                    "verify",
                    new Class[]{java.util.function.Supplier.class, ArticleState.class, String.class, String.class, String.class, String[].class, VerificationContext.class},
                    new String[]{"_", "_", "title", "body", "owner", "tags"}
            );


        ReflectUtils.assertStaticMethodIfClassExists(
                    "org.test.aptosblogdemo.domain.article.DeleteLogic",
                    "verify",
                    new Class[]{java.util.function.Supplier.class, ArticleState.class, VerificationContext.class},
                    new String[]{"_", "_"}
            );


        ReflectUtils.assertStaticMethodIfClassExists(
                    "org.test.aptosblogdemo.domain.article.AddCommentLogic",
                    "verify",
                    new Class[]{java.util.function.Supplier.class, ArticleState.class, String.class, String.class, String.class, VerificationContext.class},
                    new String[]{"_", "_", "commenter", "body", "owner"}
            );


        ReflectUtils.assertStaticMethodIfClassExists(
                    "org.test.aptosblogdemo.domain.article.UpdateCommentLogic",
                    "verify",
                    new Class[]{java.util.function.Supplier.class, ArticleState.class, BigInteger.class, String.class, String.class, String.class, VerificationContext.class},
                    new String[]{"_", "_", "commentSeqId", "commenter", "body", "owner"}
            );


        ReflectUtils.assertStaticMethodIfClassExists(
                    "org.test.aptosblogdemo.domain.article.RemoveCommentLogic",
                    "verify",
                    new Class[]{java.util.function.Supplier.class, ArticleState.class, BigInteger.class, VerificationContext.class},
                    new String[]{"_", "_", "commentSeqId"}
            );


        ReflectUtils.assertStaticMethodIfClassExists(
                    "org.test.aptosblogdemo.domain.tag.CreateLogic",
                    "verify",
                    new Class[]{java.util.function.Supplier.class, TagState.class, String.class, VerificationContext.class},
                    new String[]{"_", "_", "name"}
            );


        ReflectUtils.assertStaticMethodIfClassExists(
                    "org.test.aptosblogdemo.domain.blog.CreateLogic",
                    "verify",
                    new Class[]{java.util.function.Supplier.class, BlogState.class, String.class, Boolean.class, VerificationContext.class},
                    new String[]{"_", "_", "name", "isEmergency"}
            );


        ReflectUtils.assertStaticMethodIfClassExists(
                    "org.test.aptosblogdemo.domain.blog.AddArticleLogic",
                    "verify",
                    new Class[]{java.util.function.Supplier.class, BlogState.class, String.class, VerificationContext.class},
                    new String[]{"_", "_", "articleId"}
            );


        ReflectUtils.assertStaticMethodIfClassExists(
                    "org.test.aptosblogdemo.domain.blog.RemoveArticleLogic",
                    "verify",
                    new Class[]{java.util.function.Supplier.class, BlogState.class, String.class, VerificationContext.class},
                    new String[]{"_", "_", "articleId"}
            );


        ReflectUtils.assertStaticMethodIfClassExists(
                    "org.test.aptosblogdemo.domain.blog.DonateLogic",
                    "verify",
                    new Class[]{java.util.function.Supplier.class, BlogState.class, VerificationContext.class},
                    new String[]{"_", "_"}
            );


        ReflectUtils.assertStaticMethodIfClassExists(
                    "org.test.aptosblogdemo.domain.blog.WithdrawLogic",
                    "verify",
                    new Class[]{java.util.function.Supplier.class, BlogState.class, BigInteger.class, VerificationContext.class},
                    new String[]{"_", "_", "amount"}
            );


        ReflectUtils.assertStaticMethodIfClassExists(
                    "org.test.aptosblogdemo.domain.blog.UpdateLogic",
                    "verify",
                    new Class[]{java.util.function.Supplier.class, BlogState.class, String.class, String[].class, Boolean.class, VerificationContext.class},
                    new String[]{"_", "_", "name", "articles", "isEmergency"}
            );


        ReflectUtils.assertStaticMethodIfClassExists(
                    "org.test.aptosblogdemo.domain.blog.DeleteLogic",
                    "verify",
                    new Class[]{java.util.function.Supplier.class, BlogState.class, VerificationContext.class},
                    new String[]{"_", "_"}
            );


        ReflectUtils.assertStaticMethodIfClassExists(
                    "org.test.aptosblogdemo.domain.article.AddTagLogic",
                    "mutate",
                    new Class[]{ArticleState.class, String.class, BigInteger.class, BigInteger.class, String.class, AptosEventGuid.class, String.class, MutationContext.class},
                    new String[]{"_", "tag", "aptosEventVersion", "aptosEventSequenceNumber", "aptosEventType", "aptosEventGuid", "status"}
            );


        ReflectUtils.assertStaticMethodIfClassExists(
                    "org.test.aptosblogdemo.domain.article.CreateLogic",
                    "mutate",
                    new Class[]{ArticleState.class, String.class, String.class, String.class, BigInteger.class, BigInteger.class, String.class, AptosEventGuid.class, String.class, MutationContext.class},
                    new String[]{"_", "title", "body", "owner", "aptosEventVersion", "aptosEventSequenceNumber", "aptosEventType", "aptosEventGuid", "status"}
            );


        ReflectUtils.assertStaticMethodIfClassExists(
                    "org.test.aptosblogdemo.domain.article.UpdateLogic",
                    "mutate",
                    new Class[]{ArticleState.class, String.class, String.class, String.class, String[].class, BigInteger.class, BigInteger.class, String.class, AptosEventGuid.class, String.class, MutationContext.class},
                    new String[]{"_", "title", "body", "owner", "tags", "aptosEventVersion", "aptosEventSequenceNumber", "aptosEventType", "aptosEventGuid", "status"}
            );


        ReflectUtils.assertStaticMethodIfClassExists(
                    "org.test.aptosblogdemo.domain.article.DeleteLogic",
                    "mutate",
                    new Class[]{ArticleState.class, BigInteger.class, BigInteger.class, String.class, AptosEventGuid.class, String.class, MutationContext.class},
                    new String[]{"_", "aptosEventVersion", "aptosEventSequenceNumber", "aptosEventType", "aptosEventGuid", "status"}
            );


        ReflectUtils.assertStaticMethodIfClassExists(
                    "org.test.aptosblogdemo.domain.article.AddCommentLogic",
                    "mutate",
                    new Class[]{ArticleState.class, BigInteger.class, String.class, String.class, String.class, BigInteger.class, BigInteger.class, String.class, AptosEventGuid.class, String.class, MutationContext.class},
                    new String[]{"_", "commentSeqId", "commenter", "body", "owner", "aptosEventVersion", "aptosEventSequenceNumber", "aptosEventType", "aptosEventGuid", "status"}
            );


        ReflectUtils.assertStaticMethodIfClassExists(
                    "org.test.aptosblogdemo.domain.article.UpdateCommentLogic",
                    "mutate",
                    new Class[]{ArticleState.class, BigInteger.class, String.class, String.class, String.class, BigInteger.class, BigInteger.class, String.class, AptosEventGuid.class, String.class, MutationContext.class},
                    new String[]{"_", "commentSeqId", "commenter", "body", "owner", "aptosEventVersion", "aptosEventSequenceNumber", "aptosEventType", "aptosEventGuid", "status"}
            );


        ReflectUtils.assertStaticMethodIfClassExists(
                    "org.test.aptosblogdemo.domain.article.RemoveCommentLogic",
                    "mutate",
                    new Class[]{ArticleState.class, BigInteger.class, BigInteger.class, BigInteger.class, String.class, AptosEventGuid.class, String.class, MutationContext.class},
                    new String[]{"_", "commentSeqId", "aptosEventVersion", "aptosEventSequenceNumber", "aptosEventType", "aptosEventGuid", "status"}
            );


        ReflectUtils.assertStaticMethodIfClassExists(
                    "org.test.aptosblogdemo.domain.tag.CreateLogic",
                    "mutate",
                    new Class[]{TagState.class, String.class, BigInteger.class, BigInteger.class, String.class, AptosEventGuid.class, String.class, MutationContext.class},
                    new String[]{"_", "name", "aptosEventVersion", "aptosEventSequenceNumber", "aptosEventType", "aptosEventGuid", "status"}
            );


        ReflectUtils.assertStaticMethodIfClassExists(
                    "org.test.aptosblogdemo.domain.blog.CreateLogic",
                    "mutate",
                    new Class[]{BlogState.class, String.class, Boolean.class, BigInteger.class, BigInteger.class, String.class, AptosEventGuid.class, String.class, MutationContext.class},
                    new String[]{"_", "name", "isEmergency", "aptosEventVersion", "aptosEventSequenceNumber", "aptosEventType", "aptosEventGuid", "status"}
            );


        ReflectUtils.assertStaticMethodIfClassExists(
                    "org.test.aptosblogdemo.domain.blog.AddArticleLogic",
                    "mutate",
                    new Class[]{BlogState.class, String.class, BigInteger.class, BigInteger.class, String.class, AptosEventGuid.class, String.class, MutationContext.class},
                    new String[]{"_", "articleId", "aptosEventVersion", "aptosEventSequenceNumber", "aptosEventType", "aptosEventGuid", "status"}
            );


        ReflectUtils.assertStaticMethodIfClassExists(
                    "org.test.aptosblogdemo.domain.blog.RemoveArticleLogic",
                    "mutate",
                    new Class[]{BlogState.class, String.class, BigInteger.class, BigInteger.class, String.class, AptosEventGuid.class, String.class, MutationContext.class},
                    new String[]{"_", "articleId", "aptosEventVersion", "aptosEventSequenceNumber", "aptosEventType", "aptosEventGuid", "status"}
            );


        ReflectUtils.assertStaticMethodIfClassExists(
                    "org.test.aptosblogdemo.domain.blog.UpdateLogic",
                    "mutate",
                    new Class[]{BlogState.class, String.class, String[].class, Boolean.class, BigInteger.class, BigInteger.class, String.class, AptosEventGuid.class, String.class, MutationContext.class},
                    new String[]{"_", "name", "articles", "isEmergency", "aptosEventVersion", "aptosEventSequenceNumber", "aptosEventType", "aptosEventGuid", "status"}
            );


        ReflectUtils.assertStaticMethodIfClassExists(
                    "org.test.aptosblogdemo.domain.blog.DeleteLogic",
                    "mutate",
                    new Class[]{BlogState.class, BigInteger.class, BigInteger.class, String.class, AptosEventGuid.class, String.class, MutationContext.class},
                    new String[]{"_", "aptosEventVersion", "aptosEventSequenceNumber", "aptosEventType", "aptosEventGuid", "status"}
            );



    }

}


