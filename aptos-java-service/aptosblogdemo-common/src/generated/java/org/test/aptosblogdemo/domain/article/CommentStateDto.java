// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.test.aptosblogdemo.domain.article;

import java.util.*;
import java.math.*;
import java.math.BigInteger;
import java.util.Date;
import org.test.aptosblogdemo.domain.*;
import org.test.aptosblogdemo.specialization.*;


public class CommentStateDto {

    private BigInteger commentSeqId;

    public BigInteger getCommentSeqId()
    {
        return this.commentSeqId;
    }

    public void setCommentSeqId(BigInteger commentSeqId)
    {
        this.commentSeqId = commentSeqId;
    }

    private String commenter;

    public String getCommenter()
    {
        return this.commenter;
    }

    public void setCommenter(String commenter)
    {
        this.commenter = commenter;
    }

    private String body;

    public String getBody()
    {
        return this.body;
    }

    public void setBody(String body)
    {
        this.body = body;
    }

    private String owner;

    public String getOwner()
    {
        return this.owner;
    }

    public void setOwner(String owner)
    {
        this.owner = owner;
    }

    private Boolean active;

    public Boolean getActive()
    {
        return this.active;
    }

    public void setActive(Boolean active)
    {
        this.active = active;
    }

    private Long offChainVersion;

    public Long getOffChainVersion()
    {
        return this.offChainVersion;
    }

    public void setOffChainVersion(Long offChainVersion)
    {
        this.offChainVersion = offChainVersion;
    }

    private String articleId;

    public String getArticleId()
    {
        return this.articleId;
    }

    public void setArticleId(String articleId)
    {
        this.articleId = articleId;
    }

    private String createdBy;

    public String getCreatedBy()
    {
        return this.createdBy;
    }

    public void setCreatedBy(String createdBy)
    {
        this.createdBy = createdBy;
    }

    private Date createdAt;

    public Date getCreatedAt()
    {
        return this.createdAt;
    }

    public void setCreatedAt(Date createdAt)
    {
        this.createdAt = createdAt;
    }

    private String updatedBy;

    public String getUpdatedBy()
    {
        return this.updatedBy;
    }

    public void setUpdatedBy(String updatedBy)
    {
        this.updatedBy = updatedBy;
    }

    private Date updatedAt;

    public Date getUpdatedAt()
    {
        return this.updatedAt;
    }

    public void setUpdatedAt(Date updatedAt)
    {
        this.updatedAt = updatedAt;
    }


    public static class DtoConverter extends AbstractStateDtoConverter
    {
        public static Collection<String> collectionFieldNames = Arrays.asList(new String[]{});

        @Override
        protected boolean isCollectionField(String fieldName) {
            return CollectionUtils.collectionContainsIgnoringCase(collectionFieldNames, fieldName);
        }

        public CommentStateDto[] toCommentStateDtoArray(Iterable<CommentState> states) {
            return toCommentStateDtoList(states).toArray(new CommentStateDto[0]);
        }

        public List<CommentStateDto> toCommentStateDtoList(Iterable<CommentState> states) {
            ArrayList<CommentStateDto> stateDtos = new ArrayList();
            for (CommentState s : states) {
                CommentStateDto dto = toCommentStateDto(s);
                stateDtos.add(dto);
            }
            return stateDtos;
        }

        public CommentStateDto toCommentStateDto(CommentState state)
        {
            if(state == null) {
                return null;
            }
            CommentStateDto dto = new CommentStateDto();
            if (returnedFieldsContains("CommentSeqId")) {
                dto.setCommentSeqId(state.getCommentSeqId());
            }
            if (returnedFieldsContains("Commenter")) {
                dto.setCommenter(state.getCommenter());
            }
            if (returnedFieldsContains("Body")) {
                dto.setBody(state.getBody());
            }
            if (returnedFieldsContains("Owner")) {
                dto.setOwner(state.getOwner());
            }
            if (returnedFieldsContains("Active")) {
                dto.setActive(state.getActive());
            }
            if (returnedFieldsContains("OffChainVersion")) {
                dto.setOffChainVersion(state.getOffChainVersion());
            }
            if (returnedFieldsContains("ArticleId")) {
                dto.setArticleId(state.getArticleId());
            }
            if (returnedFieldsContains("CreatedBy")) {
                dto.setCreatedBy(state.getCreatedBy());
            }
            if (returnedFieldsContains("CreatedAt")) {
                dto.setCreatedAt(state.getCreatedAt());
            }
            if (returnedFieldsContains("UpdatedBy")) {
                dto.setUpdatedBy(state.getUpdatedBy());
            }
            if (returnedFieldsContains("UpdatedAt")) {
                dto.setUpdatedAt(state.getUpdatedAt());
            }
            return dto;
        }

    }
}

