// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

module aptos_blog_demo::tag_aggregate {
    use aptos_blog_demo::genesis_account;
    use aptos_blog_demo::tag::{Self, Tag};
    use aptos_blog_demo::tag_create_logic;
    use aptos_framework::object::{Self, Object};
    use std::string::String;

    const EMismatchedObjectSeed: u64 = 150;

    public entry fun create(
        account: &signer,
        name: String,
    ) {
        let tag_created = tag_create_logic::verify(
            account,
            name,
        );
        let constructor_ref = object::create_named_object(&genesis_account::resource_account_signer(), std::bcs::to_bytes(&name));
        let object_signer = object::generate_signer(&constructor_ref);
        let extend_ref = object::generate_extend_ref(&constructor_ref);
        let transfer_ref = object::generate_transfer_ref(&constructor_ref);
        object::disable_ungated_transfer(&transfer_ref);
        let tag_id = object::address_from_constructor_ref(&constructor_ref);
        let tag = tag_create_logic::mutate(
            account,
            &tag_created,
            tag_id,
        );
        assert!(name == tag::name(&tag), EMismatchedObjectSeed);
        tag::add_tag(&object_signer, tag);
        tag::save_object_controller(&object_signer,
            extend_ref,
            transfer_ref,
        );
        tag::set_tag_created_tag_id(&mut tag_created, tag_id);
        tag::emit_tag_created(tag_created);
    }

}
